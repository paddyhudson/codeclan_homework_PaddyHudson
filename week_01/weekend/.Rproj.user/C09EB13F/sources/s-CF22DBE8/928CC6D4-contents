---
title: "Week 1 Weekend Homework"
output: html_notebook
---

#load libraries, read in data, check column names, missing data, and view sample data
#issues were: missing tilda and period in summarise across

```{r}
library(tidyverse)
library(janitor)
books <- read_csv("data/books.csv")
str(books)
books %>% summarise(across(,
                           ~ sum(is.na(.)),
                           ~ length(unique(.))
                           ))
slice_sample(books, n = 10)
```
#initial findings
#no NA values!
#id and isbn columns probably not useful, could be trimmed
#publisher has many distinct values so not useful for grouping
#27 language codes, could be a useful grouping
#authors often have multiple books with different values i.e. multiple authors

#------------------------------------------------------------------------------

#trim unnecessary columns and tidy column names

```{r}
books_trimmed <- select(books, -rowid, -(isbn:isbn13)) %>% 
clean_names()
```

#find out number of books written in each language

```{r}
books_trimmed %>%
  group_by(language_code) %>% 
  summarise(count = n()) %>% 
  arrange(desc(count))
```

#based on findings, recode data to readable values including "Other" group

```{r}
books_trimmed <- books_trimmed %>% 
  mutate(language_code = recode(
    language_code, 
    "eng" = "English",
    "en-US" = "US English",
    "spa" = "Spanish",
    "en-GB" = "UK English",
    "fre" = "French",
    .default = "Other"
  ))
```

#------------------------------------------------------------------------------

#start to play with authors variable
#get a distinct list, then split into "tidy" (single author) and "messy" (multiple author)
#split multiple authors using "/" - this returns a column containing lists
#coerce to vectors and add to tidy dataset, then use distinct
#I now have a list of unique author names

```{r}
authors <- books_trimmed %>% 
  distinct(authors)

authors_tidy <- authors %>% 
  filter(!(str_detect(authors, "/")))

authors_messy <- authors %>% 
  filter(str_detect(authors, "/"))

authors_less_messy <- authors_messy %>% 
  mutate(authors = str_split(authors, "/"))

authors_tidy <- authors_tidy %>% 
  add_row(authors = as_vector(authors_less_messy$authors)) %>% 
  distinct()
```

#-------------------------------------------------------------------------------

#return to original dataset and create individual entries per book, per author
```{r}
books_trimmed_test <- books_trimmed %>% 
  mutate(unique_author = authors)  

for (i in 1:length(books_trimmed$authors)) {
  if(str_detect(pull(books_trimmed[i, "authors"]), "/")){
      current_authors <- pull(books_trimmed[i, "authors"])
      id_edit <- 0
      for (j in 1:length(authors_tidy$authors)) {
        current_author <- pull(authors_tidy[j, "authors"])
        if(str_detect(current_authors, current_author)) {
          id_edit <- id_edit + 1
          books_trimmed_test <- bind_rows(
            books_trimmed_test,
            filter(books_trimmed_test, book_id == pull(books_trimmed_test[i, "book_id"])))
          books_trimmed_test[nrow(books_trimmed_test), "authors"] <- current_author
          books_trimmed_test[nrow(books_trimmed_test), "book_id"] <- 
          books_trimmed_test[nrow(books_trimmed_test), "book_id"] + id_edit/10
        }
      }
    }
    
  }
}

```

#-------------------------------------------------------------------------------

#drop original entries containing multiple authors, then group and summarise to 
#get mean and count for each author

```{r}
authors_ratings <- books_trimmed_test %>%
  filter(!str_detect(authors, "/")) %>% 
  group_by(authors) %>% 
  summarise(book_count = n(), mean_rating = mean(average_rating)) %>% 
  rename(author = authors)
```



